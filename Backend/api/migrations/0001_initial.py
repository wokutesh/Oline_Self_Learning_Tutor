# Generated by Django 5.2 on 2025-05-10 07:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_no', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Grade number')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('name', models.CharField(max_length=255, verbose_name='Full name')),
                ('student_id', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='Student ID')),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/', verbose_name='Profile photo')),
                ('grade_document', models.FileField(blank=True, null=True, upload_to='grade_documents/')),
                ('address', models.CharField(blank=True, max_length=20, null=True)),
                ('b_date', models.DateField(blank=True, verbose_name='Date of birth')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='Created at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is staff')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('current_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.grade', verbose_name='Current grade')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Notification Text')),
                ('text_type', models.CharField(choices=[('general', 'General'), ('assignment', 'Assignment'), ('quiz', 'Quiz'), ('message', 'Message'), ('progress', 'Progress Update')], default='general', max_length=20, verbose_name='Type')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Full name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('students', models.ManyToManyField(related_name='parents', to=settings.AUTH_USER_MODEL, verbose_name='Linked Students')),
            ],
            options={
                'verbose_name': 'Parent',
                'verbose_name_plural': 'Parents',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('q_type', models.CharField(choices=[('MCQ', 'Multiple Choice'), ('TF', 'True/False'), ('SA', 'Short Answer'), ('LA', 'Long Answer')], max_length=10, verbose_name='Question Type')),
                ('correct_answer', models.TextField(blank=True, help_text='Used for TF/SA/LA. For MCQ, use related Choices.', null=True, verbose_name='Correct Answer')),
                ('point_worth', models.PositiveIntegerField(default=1, verbose_name='Point Worth')),
                ('related_type', models.CharField(choices=[('assignment', 'Assignment'), ('quiz', 'Quiz')], max_length=20, verbose_name='Related To')),
                ('language', models.CharField(choices=[('en', 'English'), ('am', 'Amharic'), ('om', 'Oromo')], default='en', max_length=2)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grade', verbose_name='Grade')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='api.question')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='api.grade', verbose_name='Grade')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('max_point', models.PositiveIntegerField(default=100, verbose_name='Max Points')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grade', verbose_name='Grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject', verbose_name='Subject'),
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('language', models.CharField(choices=[('en', 'English'), ('am', 'Amharic'), ('om', 'Oromo')], default='en', max_length=2)),
                ('order_no', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_type', models.CharField(choices=[('assignment', 'Assignment'), ('quiz', 'Quiz'), ('general', 'General Progress')], max_length=20, verbose_name='Feedback Type')),
                ('content', models.TextField(verbose_name='Feedback Content')),
                ('rating', models.PositiveIntegerField(help_text='Rating from 1 to 5', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('is_anonymous', models.BooleanField(default=False, verbose_name='Is Anonymous')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_feedback', to=settings.AUTH_USER_MODEL, verbose_name='Student')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grade', verbose_name='Grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='Due date')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created at')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('max_points', models.PositiveIntegerField(blank=True, null=True, verbose_name='Maximum points')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grade', verbose_name='Grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_type', models.CharField(choices=[('assignment', 'Assignment'), ('quiz', 'Quiz')], default='assignment', max_length=10)),
                ('submitted_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('submitted_file', models.FileField(blank=True, null=True, upload_to='submissions/')),
                ('grade', models.PositiveIntegerField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('assignment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.assignment')),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Submission',
                'verbose_name_plural': 'Submissions',
                'ordering': ['-submitted_date'],
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('technical', 'Technical Issue'), ('academic', 'Academic Support'), ('account', 'Account Issue'), ('other', 'Other')], max_length=20, verbose_name='Issue Type')),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='pending', max_length=20, verbose_name='Status')),
                ('admin_response', models.TextField(blank=True, null=True, verbose_name='Admin Response')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolved At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_requests', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Support Request',
                'verbose_name_plural': 'Support Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_answer', models.TextField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('score_awarded', models.PositiveIntegerField(default=0)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('selected_choice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.choice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('video_url', models.URLField(verbose_name='Video URL')),
                ('language', models.CharField(choices=[('en', 'English'), ('am', 'Amharic'), ('om', 'Oromo')], default='en', max_length=2, verbose_name='Language')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='video_thumbnails/', verbose_name='Thumbnail')),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration (in seconds)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.grade', verbose_name='Grade')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='api.lesson', verbose_name='Lesson')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'verbose_name': 'Video',
                'verbose_name_plural': 'Videos',
                'ordering': ['lesson__order_no', 'title'],
            },
        ),
        migrations.AddField(
            model_name='quiz',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.video', verbose_name='Video'),
        ),
        migrations.CreateModel(
            name='PDF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('pdf_file', models.FileField(upload_to='pdfs/', verbose_name='PDF File')),
                ('language', models.CharField(choices=[('en', 'English'), ('am', 'Amharic'), ('om', 'Oromo')], default='en', max_length=2, verbose_name='Language')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grade', verbose_name='Grade')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='api.lesson', verbose_name='Lesson')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject', verbose_name='Subject')),
            ],
            options={
                'ordering': ['grade', 'subject', 'title'],
                'unique_together': {('title', 'grade', 'subject', 'language')},
            },
        ),
        migrations.CreateModel(
            name='SubjectProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quizzes_completed', models.PositiveIntegerField(default=0)),
                ('assignments_submitted', models.PositiveIntegerField(default=0)),
                ('videos_watched', models.PositiveIntegerField(default=0)),
                ('total_score', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('completed_lessons', models.ManyToManyField(blank=True, related_name='subject_progress_lessons', to='api.lesson')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.grade')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.subject')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subject Progress',
                'verbose_name_plural': 'Subject Progress',
                'unique_together': {('user', 'grade', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='VideoProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('watched_duration', models.PositiveIntegerField(default=0)),
                ('last_position', models.PositiveIntegerField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_progress', to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress', to='api.video')),
            ],
            options={
                'verbose_name': 'Video Progress',
                'verbose_name_plural': 'Video Progress',
                'unique_together': {('user', 'video')},
            },
        ),
    ]
